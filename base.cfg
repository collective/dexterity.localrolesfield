[buildout]
package-name = dexterity.localrolesfield
package-extras = [test]

extends =
    https://raw.githubusercontent.com/collective/buildout.plonetest/master/qa.cfg
    sources.cfg

extensions =
    mr.developer
    plone.versioncheck

parts =
    instance
    omelette
    ploneversioncheck
    createcoverage
    robot
#     coverage
#     test-coverage
#     plone-helper-scripts

develop = .

eggs +=
    Plone
    Pillow
#    Products.PDBDebugMode
#    collective.profiler
#    ipdb
    pdbpp
#    plone.reload

package-extras +=
    pdbpp

# [instance]
# recipe = plone.recipe.zope2instance
# user = admin:admin
# http-address = 8080
# environment-vars =
#     zope_i18n_compile_mo_files true
# eggs =
#     PACKAGE_NAME [test]

# [test]
# recipe = zc.recipe.testrunner
# eggs = ${instance:eggs}
# initialization =
#     os.environ['TZ'] = 'UTC'
# defaults = ['-s', 'PACKAGE_NAME', '--auto-color', '--auto-progress']

always-checkout = force
auto-checkout +=
    dexterity.localroles

[omelette]
recipe = collective.recipe.omelette
eggs = ${test:eggs}

[instance]
eggs +=
    ${buildout:eggs}
    iw.debug
zcml +=
    iw.debug

[ploneversioncheck]
recipe = zc.recipe.egg
eggs = plone.versioncheck

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[reload, debug]

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[plone-helper-scripts]
recipe = zc.recipe.egg
eggs =
   Products.CMFPlone
   ${instance:eggs}
interpreter = zopepy
scripts =
   zopepy
   plone-compile-resources
